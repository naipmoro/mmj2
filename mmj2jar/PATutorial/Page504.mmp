$( <MM> <PROOF_ASST> THEOREM=nngt1ne1REDO  LOC_AFTER=nnge1
*                                                          Page504.mmp

* A good way to learn how to create Metamath proofs is to
  study existing (smaller) proofs, then remove little bits and try to
  reinsert what's missing.

  The "File/Get Proof" (control-G) command lets you load any existing proof
  in as a Worksheet. For example, the text below was created
  by using File/Get Proof on "nngt1ne1", which proves that a positive
  integer is greater than one iff it is not equal to one.
  You can use "File/Forward-Get Proof" (control-F) and "File/Backward-Get
  Proof" (control-B) to quickly move between the proofs after or before
  the current one. Those are useful for looking around, and they're also
  useful for filling in the LOC_AFTER at the top. If you're re-deriving
  something, you will may need to fill in LOC_AFTER with the name of
  the theorem before the current one; otherwise mmj2's automation might
  realize that there's an existing theorem and just use it (instead of
  letting you puzzle it out).

  You can try this all out - use "File/Get Proof" (control-G),
  enter "nngt1ne1" (without the quotes), and use control-B to see the proof
  just before nngt1ne1. On my system I found that "nnge1" was before
  "nngt1ne1", so I can use control-F to back to nngt1ne1.
  Now I can enter "nnge1" right after LOC_AFTER, to ensure that
  mmj2 won't use the "real" version of nngt1ne1 when I try to prove
  my own version.

  The set.mm database has a set of naming conventions that can help you.
  In most cases, the name of a theorem is a concatentation of
  "label fragments" of the important part of its conclusion.
  Each label fragment as a meaning, e.g., "nn" for natural numbers,
  "re" for real numbers, "1" for the number 1, "gt" for "greater than",
  "le" for less than, "an" for and, and so on.
  Most symbols are defined by an assertion named "df-NAME", where
  NAME is the label fragment used. Note that in set.mm, "natural number"
  means an integer that is one or larger.
  Thus, in set.mm, "nnre" represents "the natural numbers are real numbers",
  and "nnge1" represents "the natural numbers are greater than or equal
  to 1".

  Parentheses must be placed in specific places.
  When a function that takes two classes and produces a class is applied
  as part of an infix expression, the expression is always surrounded by
  parentheses, e.g., the use of "+" in "( 2 + 2 )".  Similarly,
  predicate expressions in infix form that take two or three wffs
  (a true or false value) and produce a wff are also always
  surrounded by parentheses, such as "( ph -> ps )".  In contrast,
  a binary relation (which compares two classes and produces a wff)
  applied in an infix expression is not surrounded by parentheses. This
  includes set membership, for example, "1 e. RR" has no parentheses.

  For more details, see the set.mm conventions section off the
  main Metamath Proof Explorer (set.mm) home page:
  http://us.metamath.org/mpegif/conventions.html


* A positive integer is greater than one iff it is not equal to one.
  (Contributed by NM, 7-Oct-2004.)

50::nnre           |- ( A e. NN -> A e. RR )
51::nnge1          |- ( A e. NN -> 1 <_ A )
52::1re            |- 1 e. RR
53::leltne         |- (  ( 1 e. RR /\ A e. RR /\ 1 <_ A )
                      -> ( 1 < A <-> A =/= 1 ) )
54:52,53:mp3an1    |- ( ( A e. RR /\ 1 <_ A ) -> ( 1 < A <-> A =/= 1 ) )
qed:50,51,54:syl2anc
                   |- ( A e. NN -> ( 1 < A <-> A =/= 1 ) )

* Please go on to Page505.mmp.
$)
