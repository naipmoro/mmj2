$( <MM> <PROOF_ASST> THEOREM=reiteration  LOC_AFTER=
*                                                          Page405.mmp

  In the last page you pressed Ctrl-U and saw the unification
  "Derive Feature" in action. It should have led you to this:

h1::reiteration.1  |- ph
!d1::              |- &W1
!d2::              |- ( &W1 -> ph )
qed:d1,d2:ax-mp          |- ph

*The "Derive feature" is an integral part of mmj2's
 unification process.  Derive is automatically invoked during unification when
 (1) an assertion Ref label is input on a derivation step
 and fewer Hyp entries are provided than needed for the Ref
 (ignoring any optional "?"s), and/or
 (2) the step's Formula is omitted (though you can't omit the 'qed' formula).
 Derive attempts to generate an omitted Formula and/or the step's Hypotheses.
 Hypothesis steps are generated if the derived hypothesis formulas
 are not already present in the proof.
 In some sense Derive is the inverse of the normal Unification process
 of finding a matching assertion Ref label for an input formula
 and its associated hypotheses; Derive instead fills in other missing pieces
 given the information available.

 In this case the Derive Feature took our formula from the "qed" step,
 "|- ph", and unified it with Assertion ax-mp and an "unknown" Hyp.
 Since we gave
 Derive no hypotheses and ax-mp uses two hypotheses, Derive generated
 two Hypothesis steps for us that match ax-mp's hypotheses, and filled
 in those hypotheses using the information it had available.

     !d1::            |- &W1
     !d2::            |- ( &W1 -> ph )

 The exclamation marks ('!') are requests for additional automation,
 and are added by default to generated hypotheses steps.
 We'll discuss the exclamation marks later; ignore them for now.

 Note that we only gave Derive one variable, "ph", and ax-mp uses two
 variables, so Derive substituted a "Work Variable" called "&W1" for the
 missing (unknown) variable. We could modify "&W1" and change it to any valid
 wff variable or expression (work variables are "meta-metavariables").
 You only need to change one instance of a work variable - once you
 change one, then the next time you use control-U, the other
 work variables's values will all be substituted to match.

 More generally, the Derive function will produce work variables
 whenever there is insufficient information
 (they will be written as &W1, &C1, and &S1 for the first 'wff',
 'class' and 'set' variables, respectively, with numbers increasing
 as needed). You can read more about work variables
 at mmj2\doc\WorkVariables.html .

 Any hypotheses generated by Derive are automatically sent through
 the Unification process themselves unless they contain Work Variables.

 Observe that the generated step d1 has a formula that looks
 suspiciously similar to our hypothesis, step 1.
 We might have known that ahead-of-time. In the next page,
 we'll see how we can provide such partial information and use it
 during unification.

 OK, forward to the next Tutorial page (Page406.mmp)!
$)
