$( <MM> <PROOF_ASST> THEOREM=reiteration  LOC_AFTER=
*                                                          Page411.mmp
* This is what (should have) appeared on the Proof Assistant GUI
  after you double-clicked the "id" line on the Step Selector Dialog,
  as instructed by Page410.mmp:

h1::reiteration.1    |- ph
d1::               |- ph
d2::id             |- ( ph -> ph )
qed:d1,d2:ax-mp  |- ph

* If you didn't see this, and instead
  you saw a 3-step completed proof, you probably forgot to remove
  the '!' in front of the old d1 on the previous page.
  Normally mmj2 could complete this proof all by itself once you used "id".
  For tutorial purposes we are temporarily disabling this behavior
  (by removing the '!') so that we can better understand what mmj2 is doing.

  So let's assume you saw the proof above.
  The message that you saw at the bottom should have been something
  like "I-PA-0411 Theorem reiteration: Step d1: Step incomplete.".
  This proof is almost complete! The problem is that step qed
  depends on d1 and d2, and we haven't justified d1.
  The hypothesis (step 1) is exactly the same as d1, though.
  Instead of using d1, we should modify qed so it uses step 1 instead.
  So all we need to do is change the 'qed' Hyp from "d1,d2" to "1,d2"
  and then press Ctrl-U. Try it! You'll suddenly see a completed proof
  at the bottom (if you can see the bottom), and the message area will say
  "I-PA-0119 Theorem reiteration: RPN-format Metamath proof generated!".
  That means the proof is complete!

* That said, there is a short-cut.
  Sometimes many other steps refer to an unproven step that should be replaced
  with some other (possibly proven) step.
  Let's try this out by first pressing control-Z as often as necessary
  to bring us back to the 4-step proof we showed above.
  Now, instead of manually updating the 'qed'
  step Hyp, just update the Ref field of step d1 like this so that it
  begins with "#" and is followed by a step identifier:

      "d1::#1"

  Then press Ctrl-U. That invokes the "LocalRef" feature, and says
  that step d1 and every reference to it should be replaced by the
  step identifier or ref given after the "#" (in this case, step 1).
  If you give mmj2 a # followed by a step identifier or ref, mmj2 will
  will even reorder all the references so that they are
  topologically sorted.

  You can also use a ref of just "#" without a step identifier.
  In that case, mmj2 will search for any previous step that
  matches the expression (it will *not* reorder things in this case).

  In short, if you use a reference name beginning with #, you will replace
  that step - and all references to that step - with a different step.
  If you want more practice, there's a bonus tutorial exercise on LocalRefs
  at PageLocalRef.mmp.

* Ok, keep going just a bit further to the next page of the Tutorial
  (Page412.mmp) now...

$)
